name: JFCLI with GO Lang

on:
  push:
    branches: [ "develop" ]
  issue_comment:
    types: [created]
  pull_request_target:
    types: [opened, synchronize]
permissions:
  actions: read # for detecting the Github Actions environment.
  id-token: write # for creating OIDC tokens for signing.
  packages: write # for uploading attestations.
  contents: read
  security-events: write # Required for uploading code scanning.
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JF_RT_URL: https://${{ vars.JF_NAME }}.jfrog.io
      RT_REPO_GO_VIRTUAL: 'krishnam-go-virtual'
      BUILD_NAME: "go-helloworld"
      BUILD_ID: "ga-${{ github.run_number }}"
    timeout-minutes: 20   # ref  https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idtimeout-minutes
    steps:
        # Use the specific setup-cli branch. Ref https://github.com/marketplace/actions/setup-jfrog-cli
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-cli
        env:
          JF_URL: ${{env.JF_RT_URL}}
          JFROG_CLI_RELEASES_REPO: '${{ env.JF_RT_URL }}/artifactory/${{ env.RT_REPO_GO_VIRTUAL}}' 
          JFROG_CLI_EXTRACTORS_REMOTE: '${{ env.JF_RT_URL }}/artifactory/${{ env.RT_REPO_GO_VIRTUAL}}'
          JFROG_CLI_LOG_LEVEL: 'DEBUG'
          JF_GIT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          oidc-provider-name: ${{ vars.JF_OIDC_PROVIDER_NAME }}
          disable-job-summary: false

      - name: Source code checkout
        uses: actions/checkout@v4

      - name: Setup Go      # ref: https://github.com/actions/setup-go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'
          check-latest: true

      - name: Software version
        run: |
          # JFrog CLI version
          jf --version
          # Go
          go version
          # Ping the server
          jf rt ping
          # jf config
          jf config show

      - name: Config jf with GO repos # ref: https://docs.jfrog-applications.jfrog.io/jfrog-applications/jfrog-cli/cli-for-jfrog-artifactory/package-managers-integration#setting-go-repositories
        run: |
          jf go-config --global --repo-deploy ${{ env.RT_REPO_GO_VIRTUAL}}  --repo-resolve ${{ env.RT_REPO_GO_VIRTUAL}}

      - name: list folder
        run: |
          pwd
          ls -lart
          cd /home/runner/work/example-goLang/example-goLang/src
          go env

      - name: prestep-summary
        run: |
          jfcliv=`jf --version`
          gover=`go version`
          echo "# :frog: Prestep Summary :pushpin:" >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo " " >> $GITHUB_STEP_SUMMARY
          echo " - Installed JFrog CLI [${jfcliv}](https://jfrog.com/getcli/) and ${gover} " >> $GITHUB_STEP_SUMMARY
          echo " - Configured the JFrog Cli with SaaS Artifactory OIDC integration: ${{ vars.JF_OIDC_PROVIDER_NAME }} " >> $GITHUB_STEP_SUMMARY

# Package
      - name: GO Build  # ref: https://docs.jfrog-applications.jfrog.io/jfrog-applications/jfrog-cli/cli-for-jfrog-artifactory/package-managers-integration#running-go-commandss
            # go build -v ./...
        run: |
          jf go build --build-name=${{ env.BUILD_NAME }} --build-number=${{ env.BUILD_ID }} -v

      - name: GO publish  # ref: https://docs.jfrog-applications.jfrog.io/jfrog-applications/jfrog-cli/cli-for-jfrog-artifactory/package-managers-integration#publishing-go-packages-to-artifactory
            # go test -v ./...
        run: |
          jf go-publish v1.${{ github.run_number }}.0 --build-name ${{ env.BUILD_NAME }} --build-number ${{ env.BUILD_ID }} --detailed-summary 

 # Build Info
    # Executive Order: 
    #       https://www.whitehouse.gov/briefing-room/presidential-actions/2021/05/12/executive-order-on-improving-the-nations-cybersecurity/
    #       https://www.nist.gov/itl/executive-order-14028-improving-nations-cybersecurity
    # US Dept of Commerce: https://www.ntia.gov/page/software-bill-materials
    # US Cyber Defence Agency: https://www.cisa.gov/sbom
    # NIST: https://www.nist.gov/itl/executive-order-14028-improving-nations-cybersecurity/software-security-supply-chains-software-1
      - name: Collect env
        run: jf rt bce ${{ env.BUILD_NAME}} ${{ env.BUILD_ID}} 
 
      - name: Add VCS info
        run: jf rt bag ${{ env.BUILD_NAME}} ${{ env.BUILD_ID}} 

      - name: Build Publish
        run: jf rt bp ${{ env.BUILD_NAME}} ${{ env.BUILD_ID}} --detailed-summary

 # TEST
      - name: GO run
        run: jf go run . -v

        